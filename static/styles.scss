@use 'sass:list';

@function getColor($color, $level: 10) {
    @if $level > 10 {
        @return lighten($color, ($level - 10) * 10%);
    } @else {
        @return darken($color, 100% - $level * 10%);
    }
}

// Variables
$white: #ffffff;
$black: #000000;
$primary-red: #ff6161;
$primary-blue: #3868ff;
$primary-magenta: #de37ff;
$primary-cyan: #48c0f6;
$primary-green: #08cc78;
$primary-yellow: #ffd966;
$primary-orange: #f78647;
$game-background: $white;
$chat-background: getColor($white, 9);
$text-primary: $white;
$text-secondary: getColor($white, 9);
$text-tertiary: getColor($white, 8);

* {
    margin: 0;
    padding: 0;
    border: 0;
    background-color: inherit;
    color: inherit;
    font-family: 'Comic Sans MS', 'Chalkboard SE', 'Comic Neue', sans-serif;
}

.text-primary {
    color: $text-primary;
}

.text-secondary {
    color: $text-secondary;
}

.text-tertiary {
    color: $text-tertiary;
}

a {
    text-decoration: none;
}

header {
    background-color: $primary-green;
    color: $text-primary;
}

.navbar {
    font-size: 18px;
    box-shadow: 0 3px 7px getColor($white, 8);
    height: 75px;
    width: 100%;
}

main {
    height: calc(100vh - 75px - 2.5em);
}

.main {
    height: 250px;
}

.lobby-browser {
    height: calc(100% - (325px + 50px));
    //overflow-y: scroll;
}

.create, .join {
    border-radius: 15px;
    background-color: getColor($primary-magenta, 13);
}

.create-button, .join-button, .ready-button, .prompt-button {
    border-radius: 5px;
}

.ready-button, .prompt-button {
    padding: .2em 0.5em;
    cursor: pointer;
    transition: .2s linear all;
}

.ready-button:hover, .prompt-button:hover {
    box-shadow: 0 0 3px 2px getColor($white, 8);
}

.color-purple {
    color: $primary-magenta;
}

.color-white {
    color: $white;
}

.background-purple {
    background-color: $primary-magenta;
}

.background-cyan {
    background-color: $primary-cyan;
}

.background-orange {
    background-color: $primary-orange;
}

.background-green {
    background-color: $primary-green;
}

.background-game {
    background-color: $game-background;
    height: calc(100vh - 75px);
}

.background-chat {
    background-color: $chat-background;
}

.background-chat-dark {
    background-color: getColor($chat-background, 8);
}

.background-white {
    background-color: $white;
}

.background-transparent {
    background-color: rgba($white, 0);
}

.flex {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

.flex-column {
    flex-direction: column;
}

.display-block {
    display: block;
}

.display-inline-block {
    display: inline-block;
}

.flex-reverse {
    flex-direction: row-reverse;
}

.justify-between {
    justify-content: space-between;
}

.justify-center {
    justify-content: center;
}

.grid {
    display: grid;
}

.block {
    display: block;
}

.logo {
    width: auto;
    height: 2em;
}

.bs {
    box-shadow: 0px 0px 3px getColor($black, 18);
}

.inset-bs  {
    box-shadow: inset 0px 0px 3px getColor($black, 18);
}

@mixin margin_padding {
    // Add all margin and padding classes (EX: mt-5)
    $sizes: 0.5em, 0.9em, 1.3em, 1.7em, 2.1em, 2.5em, auto;
    $direction_shorthands: 'l', 'r', 't', 'b', '';
    $directions: '-left', '-right', '-top', '-bottom', '';
    $extras: 6,5,4,3,2,1,auto;

    @for $i from 1 through 2 {
        $tag: if($i == 1, 'm', 'p');
        $attribute: if($i == 1, 'margin', 'padding');

        @for $j from 1 through 7 {
            @for $shorthand from 1 through 5 {
                .#{$tag}#{list.nth($direction_shorthands, $shorthand)}-#{list.nth($extras, 8 - $j)} {
                    #{$attribute}#{list.nth($directions, $shorthand)}: #{list.nth($sizes, 8 - $j)};
                }
            }
        }
    }
}

@include margin_padding();

@mixin height_width($factor) {
    @for $i from 1 through 2 {
        $type: if($i == 1, 'height', 'width');
        $prefix: if($i == 1, 'h', 'w');

        @for $j from 1 through 4 {
            .#{$prefix}-#{$j * 25} {
                #{$type}: $j * $factor;
            }
        }
    }
}

@include height_width(212px);

.fs-1 {
    font-size: 2em;
}

.fs-2 {
    font-size: 1.7em;
}

.fs-3 {
    font-size: 1.4em;
}

.fs-4 {
    font-size: 1.1em;
}

.fs-5 {
    font-size: 0.8em;
}

.fw-normal {
    font-weight: normal;
}

.fw-bold {
    font-weight: bold;
}

.text-left {
    text-align: left;
}

.text-center {
    text-align: center;
}

.align-center {
    align-self: center;
}

.vertical-center {
    vertical-align: middle;
}

.fixed-bottom {
    position: fixed;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
}

.fill {
    width: 100%;
}

.fill-h {
    height: 100%;
}

.name-input {
    border-radius: 4px;
}

.lobby-input:disabled {
    opacity: 30%;
}

.name-input::placeholder {
    color: getColor($white, 9);
}

.name-input:focus {
    background-color: getColor($primary-green, 9.5);
    outline: none;
    border-bottom: 4px solid getColor($primary-green, 8);
}

.lobby-input, .code-input, .prompt-input {
    border-radius: 4px;
    transition: outline 0.1s ease-in-out;
}

.lobby-input:focus, .code-input:focus, .prompt-input:focus {
    outline: 4px solid $primary-magenta;
}

table {
    border-spacing: 0;
}

thead > tr {
    th {
        border: 5px solid $primary-green;
        border-left: none;
        background-color: getColor($primary-green, 12);
        color: getColor($primary-green, 8);
    }
    th:first-child {
        border-left: 5px solid $primary-green;
    }
}

@mixin tableRowAlternations {
    $colors: $primary-yellow, $primary-orange, $primary-red, $primary-blue, $primary-magenta, $primary-cyan, $primary-green;
    @for $i from 0 through 6 {
        tr:nth-child(7n - #{1 + $i}) {
            td {
                border-bottom: 3px solid #{list.nth($colors, $i + 1)};
                border-right: 3px solid #{list.nth($colors, $i + 1)};
                background-color: getColor(list.nth($colors, $i + 1), 12);
                color: getColor(list.nth($colors, $i + 1), 8)
            }

            td:first-child {
                border-left: 3px solid #{list.nth($colors, $i + 1)};
            }
        }
    }
}

@include tableRowAlternations();

.chat {
    grid-template-rows: 90% 10%;
    overflow: hidden;
}

.chat-input {
    height: 3.5rem;
}

.chat-input .input {
    resize: none;
    flex: 1;
    outline: none;
    border: none;
    overflow-y: scroll;
    line-height: 1.25;
}

.chat-input .input::-webkit-scrollbar {
    height: 18px;
    width: 15px;
}

.chat-input .input::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.3);
    border: 4px solid transparent;
    background-clip: content-box;
}

.chat-input .input::-webkit-scrollbar-corner {
    background-color: rgba(0, 0, 0, 0.1);
}

.chat-entries::-webkit-scrollbar {
    height: 18px;
    width: 15px;
}

.chat-entries::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.3);
    border: 4px solid transparent;
    background-clip: content-box;
}

.chat-entries::-webkit-scrollbar-corner {
    background-color: rgba(0, 0, 0, 0.1);
}

.chat-entries {
    overflow-y: scroll;
}

.voting-wrap {
    display: grid;
    grid-template-rows: 100%;
    grid-template-columns: 25% 25% 25% 25%;
}

.vote-frame {
    border-radius: 10px;
    display: flex;
    justify-content: space-around;
    height: min(100%, 212px);
    aspect-ratio: 1/1;
    margin: auto;
    cursor: pointer;
    transition: all .2s;
}

.game-vote-frame {
    border-radius: 10px;
    display: flex;
    justify-content: space-around;
    height: 200px;
    aspect-ratio: 1/1;
    margin: auto;
    cursor: pointer;
    transition: all .2s;
}

.timer {
    position: absolute;
    bottom: 50px;
    left: 50px;
    background-color: rgba(0, 0, 0, 0);
    border-radius: 50px;
    padding: 8px;
    border: 15px solid $primary-orange;
    font-size: 3rem;
}

.result-frame {
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 200px;
    aspect-ratio: 1/1;
}

.result-container {
    overflow-y: scroll;
}

.result-container::-webkit-scrollbar {
    height: 18px;
    width: 15px;
}

.result-container::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.3);
    border: 4px solid transparent;
    background-clip: content-box;
}

.result-container::-webkit-scrollbar-corner {
    background-color: rgba(0, 0, 0, 0.1);
}

.game-vote-container {
    overflow-y: scroll;
}

.game-vote-container::-webkit-scrollbar {
    height: 18px;
    width: 15px;
}

.game-vote-container::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.3);
    border: 4px solid transparent;
    background-clip: content-box;
}

.game-vote-container::-webkit-scrollbar-corner {
    background-color: rgba(0, 0, 0, 0.1);
}

.vote-frame:hover, .game-vote-frame:hover {
    box-shadow: 0px 0px 6px 4px getColor($black, 18);
}

.vote-frame[data-selected="true"], .game-vote-frame[data-selected="true"] {
    background-color: $primary-cyan;
    box-shadow: 0px 0px 6px 4px getColor($black, 18);
}

.vote-frame > img {
    align-self: center;
    width: 60%;
    aspect-ratio: 1/1;
}

.loading-image {
    width: 100px;
    height: 100px;
    opacity: 0.5;
    background: url("/static/images/logoborder.svg") center no-repeat;
    background-size: contain;
    animation-name: animCircle;
    animation-duration: 15s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    display: block;
}

@keyframes animCircle {
    to {transform: rotate(360deg); }
    from {transform: rotate(-360deg); }
}

@media only screen and (max-width: 1160px) {
    .voting-wrap {
        grid-template-columns: 50% 50%;
        grid-template-rows: 50% 50%;
        height: 100%;
    }
}

@media only screen and (max-width: 800px) {
    @include height_width(150px);
}

@media only screen and (max-width: 600px) {
    @include height_width(120px);
}

.waiting {
    opacity: 0.3;
}