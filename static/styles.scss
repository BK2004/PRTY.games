@use 'sass:list';

// Variables
$primary-red: #ff6161;
$primary-blue: #3868ff;
$primary-magenta: #de37ff;
$primary-cyan: #48c0f6;
$primary-green: #08cc78;
$primary-yellow: #ffd966;
$primary-orange: #f78647;
$text-primary: #ffffff;
$white: #ffffff;
$black: #000000;

@function getColor($color, $level: 10) {
    @if $level > 10 {
        @return lighten($color, ($level - 10) * 10%);
    } @else {
        @return darken($color, 100% - $level * 10%);
    }
}

* {
    margin: 0;
    padding: 0;
    border: 0;
    background-color: inherit;
    color: inherit;
    font-family: "Comic Sans MS", "Comic Sans", cursive;
}

a {
    text-decoration: none;
}

header {
    background-color: $primary-green;
    color: $text-primary;
}

.navbar {
    font-size: 18px;
    box-shadow: 0 3px 7px getColor($white, 8);
    height: 75px;
    width: 100%;
}

.main {
    height: 250px;
}

.lobby-browser {
    height: calc(100% - (325px + 50px));
    //overflow-y: scroll;
}

.create, .join {
    border-radius: 15px;
    background-color: getColor($primary-magenta, 13);
}

.create-button, .join-button {
    border-radius: 5px;
}

.color-purple {
    color: $primary-magenta;
}

.color-white {
    color: $white;
}

.background-purple {
    background-color: $primary-magenta;
}

.background-white {
    background-color: $white;
}

.background-transparent {
    background-color: rgba($white, 0);
}

.flex {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

.display-block {
    display: block;
}

.display-inline-block {
    display: inline-block;
}

.flex-reverse {
    flex-direction: row-reverse;
}

.justify-between {
    justify-content: space-between;
}

.grid {
    display: grid;
}

.block {
    display: block;
}

.logo {
    width: auto;
    height: 2em;
}

.bs {
    box-shadow: 0px 0px 3px getColor($black, 18);
}

.inset-bs  {
    box-shadow: inset 0px 0px 3px getColor($black, 18);
}

@mixin margin_padding {
    // Add all margin and padding classes (EX: mt-5)
    $sizes: 0.5em, 0.9em, 1.3em, 1.7em, 2.1em, 2.5em, auto;
    $direction_shorthands: 'l', 'r', 't', 'b', '';
    $directions: '-left', '-right', '-top', '-bottom', '';
    $extras: 6,5,4,3,2,1,auto;

    @for $i from 1 through 2 {
        $tag: if($i == 1, 'm', 'p');
        $attribute: if($i == 1, 'margin', 'padding');

        @for $j from 1 through 7 {
            @for $shorthand from 1 through 5 {
                .#{$tag}#{list.nth($direction_shorthands, $shorthand)}-#{list.nth($extras, 8 - $j)} {
                    #{$attribute}#{list.nth($directions, $shorthand)}: #{list.nth($sizes, 8 - $j)};
                }
            }
        }
    }
}

@include margin_padding();

@mixin height_width($factor) {
    @for $i from 1 through 2 {
        $type: if($i == 1, 'height', 'width');
        $prefix: if($i == 1, 'h', 'w');

        @for $j from 1 through 4 {
            .#{$prefix}-#{$j * 25} {
                #{$type}: $j * $factor;
            }
        }
    }
}

@include height_width(212px);

.fs-1 {
    font-size: 2em;
}

.fs-2 {
    font-size: 1.7em;
}

.fs-3 {
    font-size: 1.4em;
}

.fs-4 {
    font-size: 1.1em;
}

.fs-5 {
    font-size: 0.8em;
}

.fw-bold {
    font-weight: bold;
}

.text-center {
    text-align: center;
}

.align-center {
    align-self: center;
}

.fixed-bottom {
    position: fixed;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
}

.fill {
    width: 100%;
}

main {
    height: 50vh;
}

.name-input {
    border-radius: 4px;
}

.lobby-input:disabled {
    opacity: 30%;
}

.name-input::placeholder {
    color: getColor($white, 9);
}

.name-input:focus {
    background-color: getColor($primary-green, 9.5);
    outline: none;
    border-bottom: 4px solid getColor($primary-green, 8);
}

.lobby-input, .code-input {
    border-radius: 4px;
    transition: outline 0.1s ease-in-out;
}

.lobby-input:focus, .code-input:focus {
    outline: 4px solid $primary-magenta;
}

table {
    border-spacing: 0;
}

thead > tr {
    th {
        border: 5px solid $primary-green;
        border-left: none;
        background-color: getColor($primary-green, 12);
        color: getColor($primary-green, 8);
    }
    th:first-child {
        border-left: 5px solid $primary-green;
    }
}

@mixin tableRowAlternations {
    $colors: $primary-yellow, $primary-orange, $primary-red, $primary-blue, $primary-magenta, $primary-cyan, $primary-green;
    @for $i from 0 through 6 {
        tr:nth-child(7n - #{1 + $i}) {
            td {
                border-bottom: 3px solid #{list.nth($colors, $i + 1)};
                border-right: 3px solid #{list.nth($colors, $i + 1)};
                background-color: getColor(list.nth($colors, $i + 1), 12);
                color: getColor(list.nth($colors, $i + 1), 8)
            }

            td:first-child {
                border-left: 3px solid #{list.nth($colors, $i + 1)};
            }
        }
    }
}

@include tableRowAlternations();

@media only screen and (max-width: 828px) {
    @include height_width(150px);
}

@media only screen and (max-width: 600px) {
    @include height_width(120px);
}